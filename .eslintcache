[{"/Users/ivangaray/Documents/Proyectos/bino-aktiv/src/index.js":"1","/Users/ivangaray/Documents/Proyectos/bino-aktiv/src/reportWebVitals.js":"2","/Users/ivangaray/Documents/Proyectos/bino-aktiv/src/redux/store.js":"3","/Users/ivangaray/Documents/Proyectos/bino-aktiv/src/App.js":"4","/Users/ivangaray/Documents/Proyectos/bino-aktiv/src/redux/middleware.js":"5","/Users/ivangaray/Documents/Proyectos/bino-aktiv/src/redux/sagas.js":"6","/Users/ivangaray/Documents/Proyectos/bino-aktiv/src/redux/reducers.js":"7","/Users/ivangaray/Documents/Proyectos/bino-aktiv/src/redux/auth/reducers.js":"8","/Users/ivangaray/Documents/Proyectos/bino-aktiv/src/redux/auth/saga.js":"9","/Users/ivangaray/Documents/Proyectos/bino-aktiv/src/redux/activities/saga.js":"10","/Users/ivangaray/Documents/Proyectos/bino-aktiv/src/redux/dialog/reducer.js":"11","/Users/ivangaray/Documents/Proyectos/bino-aktiv/src/routes/statistikk/index.js":"12","/Users/ivangaray/Documents/Proyectos/bino-aktiv/src/routes/home/index.js":"13","/Users/ivangaray/Documents/Proyectos/bino-aktiv/src/routes/recovery/index.js":"14","/Users/ivangaray/Documents/Proyectos/bino-aktiv/src/routes/aktivitet/index.js":"15","/Users/ivangaray/Documents/Proyectos/bino-aktiv/src/routes/teams/index.js":"16","/Users/ivangaray/Documents/Proyectos/bino-aktiv/src/routes/profile/index.js":"17","/Users/ivangaray/Documents/Proyectos/bino-aktiv/src/redux/users/saga.js":"18","/Users/ivangaray/Documents/Proyectos/bino-aktiv/src/redux/users/reducers.js":"19","/Users/ivangaray/Documents/Proyectos/bino-aktiv/src/redux/activities/reducers.js":"20","/Users/ivangaray/Documents/Proyectos/bino-aktiv/src/routes/addUser/index.js":"21","/Users/ivangaray/Documents/Proyectos/bino-aktiv/src/routes/tips/index.js":"22","/Users/ivangaray/Documents/Proyectos/bino-aktiv/src/routes/generalStatistikk/index.js":"23","/Users/ivangaray/Documents/Proyectos/bino-aktiv/src/redux/actions.js":"24","/Users/ivangaray/Documents/Proyectos/bino-aktiv/src/redux/activities/actions.js":"25","/Users/ivangaray/Documents/Proyectos/bino-aktiv/src/constants/actionType.js":"26","/Users/ivangaray/Documents/Proyectos/bino-aktiv/src/redux/users/actions.js":"27","/Users/ivangaray/Documents/Proyectos/bino-aktiv/src/routes/statistikk/components/GraphAllActivities.js":"28","/Users/ivangaray/Documents/Proyectos/bino-aktiv/src/routes/statistikk/components/GraphOwnTrening.js":"29","/Users/ivangaray/Documents/Proyectos/bino-aktiv/src/routes/statistikk/components/ListOwnActivities.js":"30","/Users/ivangaray/Documents/Proyectos/bino-aktiv/src/components/Dialog/index.jsx":"31","/Users/ivangaray/Documents/Proyectos/bino-aktiv/src/firebase/index.js":"32","/Users/ivangaray/Documents/Proyectos/bino-aktiv/src/routes/recovery/components/Login.js":"33","/Users/ivangaray/Documents/Proyectos/bino-aktiv/src/redux/dialog/actions.js":"34","/Users/ivangaray/Documents/Proyectos/bino-aktiv/src/layout/index.js":"35","/Users/ivangaray/Documents/Proyectos/bino-aktiv/src/components/Button/index.js":"36","/Users/ivangaray/Documents/Proyectos/bino-aktiv/src/redux/auth/actions.js":"37","/Users/ivangaray/Documents/Proyectos/bino-aktiv/src/routes/home/components/Login.js":"38","/Users/ivangaray/Documents/Proyectos/bino-aktiv/src/data/MonthNames.js":"39","/Users/ivangaray/Documents/Proyectos/bino-aktiv/src/data/DataTeams.js":"40","/Users/ivangaray/Documents/Proyectos/bino-aktiv/src/layout/Header.js":"41","/Users/ivangaray/Documents/Proyectos/bino-aktiv/src/layout/Footer.js":"42","/Users/ivangaray/Documents/Proyectos/bino-aktiv/src/components/Arrows/index.js":"43","/Users/ivangaray/Documents/Proyectos/bino-aktiv/src/components/Menu/index.js":"44","/Users/ivangaray/Documents/Proyectos/bino-aktiv/src/components/Menu/components/Burger.js":"45","/Users/ivangaray/Documents/Proyectos/bino-aktiv/src/components/Menu/components/MenuContent.js":"46"},{"size":714,"mtime":1608495861466,"results":"47","hashOfConfig":"48"},{"size":362,"mtime":1608495861469,"results":"49","hashOfConfig":"48"},{"size":776,"mtime":1609149352065,"results":"50","hashOfConfig":"48"},{"size":1821,"mtime":1619707406981,"results":"51","hashOfConfig":"48"},{"size":445,"mtime":1608495861468,"results":"52","hashOfConfig":"48"},{"size":270,"mtime":1619707402574,"results":"53","hashOfConfig":"48"},{"size":315,"mtime":1619707406981,"results":"54","hashOfConfig":"48"},{"size":3742,"mtime":1610550098883,"results":"55","hashOfConfig":"48"},{"size":5310,"mtime":1616088582475,"results":"56","hashOfConfig":"48"},{"size":2873,"mtime":1619707402573,"results":"57","hashOfConfig":"48"},{"size":686,"mtime":1608495861468,"results":"58","hashOfConfig":"48"},{"size":4862,"mtime":1619679923027,"results":"59","hashOfConfig":"48"},{"size":3027,"mtime":1616088343467,"results":"60","hashOfConfig":"48"},{"size":1795,"mtime":1608557705120,"results":"61","hashOfConfig":"48"},{"size":5448,"mtime":1615323858556,"results":"62","hashOfConfig":"48"},{"size":4537,"mtime":1616405238711,"results":"63","hashOfConfig":"48"},{"size":5125,"mtime":1608674213364,"results":"64","hashOfConfig":"48"},{"size":657,"mtime":1619707406982,"results":"65","hashOfConfig":"48"},{"size":604,"mtime":1619707406982,"results":"66","hashOfConfig":"48"},{"size":1714,"mtime":1619707406981,"results":"67","hashOfConfig":"48"},{"size":4819,"mtime":1616074931699,"results":"68","hashOfConfig":"48"},{"size":4583,"mtime":1619707406983,"results":"69","hashOfConfig":"48"},{"size":3783,"mtime":1619710123546,"results":"70","hashOfConfig":"48"},{"size":136,"mtime":1619707402570,"results":"71","hashOfConfig":"48"},{"size":1555,"mtime":1619707402571,"results":"72","hashOfConfig":"48"},{"size":2504,"mtime":1619707402569,"results":"73","hashOfConfig":"48"},{"size":405,"mtime":1619707402575,"results":"74","hashOfConfig":"48"},{"size":7155,"mtime":1611950396181,"results":"75","hashOfConfig":"48"},{"size":3088,"mtime":1608510466671,"results":"76","hashOfConfig":"48"},{"size":4167,"mtime":1615323832958,"results":"77","hashOfConfig":"48"},{"size":343,"mtime":1608495861464,"results":"78","hashOfConfig":"48"},{"size":765,"mtime":1619677795249,"results":"79","hashOfConfig":"48"},{"size":1973,"mtime":1616075732610,"results":"80","hashOfConfig":"48"},{"size":623,"mtime":1608495861468,"results":"81","hashOfConfig":"48"},{"size":3662,"mtime":1608674245842,"results":"82","hashOfConfig":"48"},{"size":815,"mtime":1608495861464,"results":"83","hashOfConfig":"48"},{"size":2468,"mtime":1610550098882,"results":"84","hashOfConfig":"48"},{"size":2647,"mtime":1616087295961,"results":"85","hashOfConfig":"48"},{"size":172,"mtime":1611938286534,"results":"86","hashOfConfig":"48"},{"size":829,"mtime":1616405243810,"results":"87","hashOfConfig":"48"},{"size":1503,"mtime":1608674472217,"results":"88","hashOfConfig":"48"},{"size":4489,"mtime":1613637574312,"results":"89","hashOfConfig":"48"},{"size":2229,"mtime":1611942149965,"results":"90","hashOfConfig":"48"},{"size":918,"mtime":1608539850641,"results":"91","hashOfConfig":"48"},{"size":1706,"mtime":1608495861465,"results":"92","hashOfConfig":"48"},{"size":2682,"mtime":1608628395590,"results":"93","hashOfConfig":"48"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"97"},"1joutb5",{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"97"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"97"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"97"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"97"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"97"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"97"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"97"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"97"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"97"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"97"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"97"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147","usedDeprecatedRules":"97"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150","usedDeprecatedRules":"97"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"165","usedDeprecatedRules":"97"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"168","usedDeprecatedRules":"97"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"173","usedDeprecatedRules":"97"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"186","usedDeprecatedRules":"97"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"189","usedDeprecatedRules":"97"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"206"},"/Users/ivangaray/Documents/Proyectos/bino-aktiv/src/index.js",["207"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport configApp from './redux/store';\nimport { ToastContainer, toast } from 'react-toastify';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={configApp()}>\n      <ToastContainer />\n\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n",["208","209"],"/Users/ivangaray/Documents/Proyectos/bino-aktiv/src/reportWebVitals.js",[],"/Users/ivangaray/Documents/Proyectos/bino-aktiv/src/redux/store.js",[],"/Users/ivangaray/Documents/Proyectos/bino-aktiv/src/App.js",["210","211"],"import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  Redirect, Route, Switch, BrowserRouter\n} from 'react-router-dom';\nimport Home from './routes/home';\nimport Statistikk from './routes/statistikk';\nimport Aktivitet from './routes/aktivitet';\nimport Teams from './routes/teams';\nimport Tips from './routes/tips';\nimport Profile from './routes/profile';\nimport AddUser from './routes/addUser';\nimport createHistory from 'history/createBrowserHistory';\nimport Recovery from './routes/recovery';\nimport GeneralStatistikk from './routes/generalStatistikk';\nconst history = createHistory();\nexport { history };\n\nconst PrivateRoute = ({ component: Component, authed, ...rest }) => (\n\n  < Route {...rest} render={(props) => (\n\n    authed !== null\n      ? <Component {...props} loggedUser={authed} />\n      : <Redirect to={{\n        pathname: '/',\n        state: { from: props.location }\n      }} />\n\n  )} />\n)\n\n\nconst App = () => {\n  const loggedUser = localStorage.getItem('user_id');\n\n  return (<>\n\n    <BrowserRouter>\n      <Switch>\n        <Route path={\"/\"} component={Home} exact />\n        <PrivateRoute authed={loggedUser} path={\"/statistikk\"} component={Statistikk} exact />\n        <PrivateRoute authed={loggedUser} path={\"/aktivitet\"} component={Aktivitet} exact />\n        <PrivateRoute authed={loggedUser} path={\"/teams\"} component={Teams} exact />\n        <Route path={\"/tips\"} component={Tips} exact />\n        <Route path={\"/general-statistikk\"} component={GeneralStatistikk} exact />\n        <Route path={\"/recovery\"} component={Recovery} exact />\n        <PrivateRoute authed={loggedUser} path={\"/profile\"} component={Profile} exact />\n        <Route path={\"/add-user\"} component={AddUser} exact />\n      </Switch>\n    </BrowserRouter>\n  </>\n  )\n}\n\n\nexport default App;\n","/Users/ivangaray/Documents/Proyectos/bino-aktiv/src/redux/middleware.js",["212"],"export const storeReset = () => (next) => (reducer, initialState, enhancer) => {\n    const resetType = 'FIREBASE_LOGOUT_SUCCESS';\n    const enhanceReducer = (state, action) => {\n        if (action.type === resetType) {\n            // eslint-disable-next-line no-param-reassign\n            state = undefined;\n        }\n        return reducer(state, action);\n    };\n\n    return next(enhanceReducer, initialState, enhancer);\n};\n\nexport default {};\n","/Users/ivangaray/Documents/Proyectos/bino-aktiv/src/redux/sagas.js",[],"/Users/ivangaray/Documents/Proyectos/bino-aktiv/src/redux/reducers.js",[],"/Users/ivangaray/Documents/Proyectos/bino-aktiv/src/redux/auth/reducers.js",["213","214","215","216","217","218"],"import {\n    LOGIN_USER,\n    LOGIN_USER_SUCCCES,\n    LOGIN_USER_ERROR,\n    LOGOUT_USER,\n    LOGOUT_USER_ERROR,\n    LOGOUT_USER_SUCCCES,\n    REGISTER_USER_ERROR,\n    REGISTER_USER_SUCCESS,\n    REGISTER_USER_INIT,\n    GET_USER_ACTIVITIES_SUCCES,\n    GET_USER_DATA_SUCCES,\n    GET_USER_DATA,\n    CHANGE_PASSWORD,\n    CHANGE_PASSWORD_SUCCES,\n    CHANGE_PASSWORD_ERROR,\n    UPDATE_USER_ACTIVITIES\n} from '../../constants/actionType';\n\nconst INIT_STATE = {\n    user: {},\n    isRegistering: false,\n    authId: localStorage.getItem('fb_user_id'),\n    email: localStorage.getItem('fb_email'),\n    error: false,\n    loading: false,\n};\n\nexport default (state = INIT_STATE, action) => {\n\n    switch (action.type) {\n        case REGISTER_USER_ERROR:\n            return { ...state, loading: false, error: true, authId: action.payload.uid, error: action.payload.error }\n        case LOGIN_USER:\n            return { ...state, loading: true, error: false }\n        case LOGIN_USER_ERROR:\n            return { ...state, loading: false, error: true, errorMessage: action.payload }\n        case LOGIN_USER_SUCCCES:\n            return {\n                ...state,\n                loading: false,\n                authId: action.payload.userId,\n                user: {\n                    ...state.user,\n                    email: action.payload.email,\n                },\n                error: false,\n            };\n        case LOGOUT_USER:\n            return { ...state, loading: true, error: false };\n        case LOGOUT_USER_SUCCCES:\n            return {\n                ...state, loading: false, error: false, user: {}, authId: null,\n            };\n        case LOGOUT_USER_ERROR:\n            return { ...state, loading: false, error: true, errorMessage: action.payload.error };\n        case GET_USER_ACTIVITIES_SUCCES:\n            return { ...state, loading: false, error: false, useractivities: action.payload.data };\n\n        case UPDATE_USER_ACTIVITIES:\n            // const res = state.useractivities.findIndex(fruit => fruit === action.payload)\n            //  console.log('resultado ->:', res, 'action: ->', action.payload, 'user activities: =>', state.useractivities)\n\n\n            var __FOUND = state.useractivities.findIndex(function (post, index) {\n                if (post.id == action.payload)\n                    return index;\n            });\n            console.log(__FOUND, 'respuesta')\n            var someArray = state.useractivities.slice(0, __FOUND).concat(state.useractivities.slice(-__FOUND));\n\n            // On success __FOUND will contain the index of the element\n            // On failure it will contain -1\n            console.log(__FOUND, someArray); // 2\n            return {\n                ...state, loading: false, error: false, useractivities: someArray\n            };\n\n        case GET_USER_DATA:\n            return {\n                ...state,\n                loading: true,\n                error: false,\n            };\n\n        case GET_USER_DATA_SUCCES:\n            return {\n                ...state, loading: false, error: false, user: {\n                    name: action.payload.data.name,\n                    surname: action.payload.data.surname,\n                    team: action.payload.data.team,\n                    gender: action.payload.data.gender,\n                    email: action.payload.data.email\n                }\n            }\n        case CHANGE_PASSWORD:\n            return {\n                ...state, loading: true\n            }\n        case CHANGE_PASSWORD_SUCCES:\n            return {\n                ...state, loading: false\n            }\n        case CHANGE_PASSWORD_ERROR:\n            return {\n                ...state, loading: false\n            }\n\n        default:\n            return state;\n    }\n}","/Users/ivangaray/Documents/Proyectos/bino-aktiv/src/redux/auth/saga.js",["219","220","221","222","223","224","225"],"import { call, all, put, takeEvery, select } from 'redux-saga/effects';\nimport { push } from 'react-router-redux';\nimport {\n    REGISTER_USER_INIT,\n    REGISTER_USER_SUCCESS,\n    LOGIN_USER,\n    DELETE_USER,\n    LOGOUT_USER,\n    UPDATE_USER,\n    CHANGE_PASSWORD,\n    GET_USER_DATA,\n} from '../../constants/actionType';\nimport { auth, functions } from '../../firebase';\nimport {\n    registerUserSucces,\n    registerUserError,\n    deleteUserSucces,\n    loginUserSucces,\n    loginUserError,\n    logOutUserSucces,\n    getUserDataSucces,\n    getUserDataError,\n    dialogInfoOn,\n    changePasswordError,\n    changePasswordSucces\n} from '../actions'\nimport { notifySucces, notifyError } from '../../components/Dialog/'\n\n\n//functions.useEmulator(\"localhost\", 5001);\n\n\nauth.onAuthStateChanged(function (user) {\n    if (user) {\n        // User is signed in.\n    } else {\n        localStorage.removeItem('user_id');\n        localStorage.removeItem('email');\n\n    }\n});\n\n\nfunction* loginUserFirebase({ payload }) {\n    console.log('entrando a login', payload)\n    const { email, password } = payload\n\n    try {\n        const res = yield auth.signInWithEmailAndPassword(email, password)\n        localStorage.setItem('user_id', res.user.uid);\n        localStorage.setItem('email', res.user.email);\n        yield put(loginUserSucces(res.user.uid, res.user.email))\n        try {\n            const getUserdata = functions.httpsCallable('getUser');\n            const userData = yield getUserdata();\n            console.log(userData, 'ESTO ES USERDATA')\n            window.location.href = '/aktivitet';\n            yield put(getUserDataSucces(userData))\n            put(notifySucces('Velkommen!'))\n        } catch (error) {\n            console.log(error.message)\n        }\n    }\n    catch (error) {\n        console.log(error)\n        yield put(loginUserError(error.message))\n        put(notifyError(error.message))\n    }\n}\n\nfunction* userUpdate(data) {\n    const { payload } = data;\n    const { name, surname, gender, team } = payload;\n    const uid = localStorage.getItem('user_id');\n    console.log('esto es iud:', uid)\n\n    try {\n        const updateUser = functions.httpsCallable('updateUser');\n        const res = yield updateUser({\n            name: name,\n            surname: surname,\n            gender: gender,\n            team: team\n        })\n        put(notifySucces('Profil din ble updatert!'))\n        //put(getUserData())\n    } catch (error) {\n        put(notifyError(error.message))\n        window.location.href = '/profile';\n\n    }\n\n}\n\nfunction* reigisterUserFirebase(data) {\n    const { payload } = data\n    console.log('payload', payload)\n    const { email, password, name, surname, gender, team } = payload;\n    try {\n        const res = yield auth.createUserWithEmailAndPassword(email, password)\n        // localStorage.setItem('user_id', res.user.uid);\n        //localStorage.setItem('email', res.user.email);\n        const uid = res.user.uid;\n        yield put(registerUserSucces(uid, res.user.email))\n        const updateUserRegister = functions.httpsCallable('updateUserRegister');\n        const userdata = yield updateUserRegister({\n            uid: uid,\n            name: name,\n            surname: surname,\n            gender: gender,\n            team: team\n        })\n        console.log(userdata, 'USERDATA');\n        localStorage.removeItem('user_id');\n        localStorage.removeItem('email');\n        yield put(logOutUserSucces());\n        put(notifySucces('Bruker opprettet!'))\n\n    } catch (error) {\n        console.log(error)\n        yield put(registerUserError(error.message))\n        put(notifyError(error.message))\n\n    }\n}\n\nfunction* getUserData() {\n\n    yield put(loginUserSucces(localStorage.getItem('user_id'), localStorage.getItem('email')))\n    try {\n        const getUserdata = functions.httpsCallable('getUser');\n        const userData = yield getUserdata();\n        yield put(getUserDataSucces(userData))\n    } catch (error) {\n        console.log(error.message)\n    }\n}\n\nfunction* logOutUserFirebase() {\n    yield auth.signOut();\n    localStorage.removeItem('user_id');\n    localStorage.removeItem('email');\n    yield put(logOutUserSucces());\n    window.location.href = '/';\n}\n\nfunction* deleteUserFirebase({ payload }) {\n    auth.deleteUserFirebase();\n    yield put(deleteUserSucces())\n}\n\nfunction* changePassword({ payload }) {\n\n    //const email = user.email;\n    console.log('en change pass', payload)\n    const { email } = payload;\n    try {\n        const res = yield auth.sendPasswordResetEmail(email)\n        yield put(changePasswordSucces('Email sent'))\n        console.log(res)\n        yield (put(changePasswordSucces))\n        put(notifySucces('En e-post ble sendt for å kunne endre passordet.'))\n\n    } catch (error) {\n        yield put(changePasswordError(error.message))\n        put(notifyError(error.message))\n\n    }\n    //console.log(user)\n\n}\n\nexport default function* rooSaga() {\n    yield all([\n        takeEvery(REGISTER_USER_INIT, reigisterUserFirebase),\n        takeEvery(DELETE_USER, deleteUserFirebase),\n        takeEvery(LOGIN_USER, loginUserFirebase),\n        takeEvery(LOGOUT_USER, logOutUserFirebase),\n        takeEvery(UPDATE_USER, userUpdate),\n        takeEvery(CHANGE_PASSWORD, changePassword),\n        takeEvery(GET_USER_DATA, getUserData),\n    ]);\n}","/Users/ivangaray/Documents/Proyectos/bino-aktiv/src/redux/activities/saga.js",["226","227","228","229","230","231","232"],"import { call, all, put, takeEvery, select } from 'redux-saga/effects';\nimport {\n    ADD_ACTIVITY,\n    GET_ALL_USERS_ACTIVITIES_SUCCES,\n    GET_USER_ACTIVITIES,\n    GET_ALL_USERS_ACTIVITIES,\n    DELETE_ACTIVITY,\n} from '../../constants/actionType';\nimport { auth, functions } from '../../firebase';\nimport {\n    addActivitySucces,\n    addActivityError,\n    dialogInfoOn,\n    deleteActivityError,\n    deleteActivitySucces,\n    updateUserActivities\n\n} from '../actions'\nimport { getAllUsersActivitiesError, getAllUsersActivitiesSucces, getUserActivitiesError, getUserActivitiesSucces } from './actions';\nimport { notifySucces, notifyError } from '../../components/Dialog/'\n\nfunction* addActivity({ payload }) {\n    console.log('payload:', payload)\n    const { uid, type, date, duration, team } = payload;\n    try {\n        const addActivity = functions.httpsCallable('addActivity');\n        const res = yield addActivity({\n            uid: uid,\n            type: type,\n            date: date,\n            duration: duration,\n            team: team,\n        })\n        console.log(res)\n        yield put(addActivitySucces(res))\n        yield notifySucces(\"Aktivitet lagret!\")\n\n    } catch (error) {\n        yield put(addActivityError(error.message))\n        yield notifyError(\"Aktiviteten kunne ikke lagres. Vennligst prøv igjen.\")\n\n    }\n}\n\nfunction* getUserActivities({ payload }) {\n\n    try {\n        const getUserActivities = functions.httpsCallable('getUserActivities');\n        const res = yield getUserActivities()\n        console.log(res)\n        yield put(getUserActivitiesSucces(res))\n    } catch (error) {\n        console.log(error)\n        yield put(getUserActivitiesError(error.message))\n\n    }\n\n}\n\nfunction* getAllUsersActivities({ payload }) {\n\n    try {\n        const getAllUsersActivities = functions.httpsCallable('getAllUsersActivities');\n        const res = yield getAllUsersActivities()\n        console.log(res)\n        yield put(getAllUsersActivitiesSucces(res))\n    } catch (error) {\n        console.log(error)\n        yield put(getAllUsersActivitiesError(error.message))\n\n    }\n\n}\n\nfunction* deleteActivity({ payload }) {\n    console.log(payload)\n\n    try {\n        const deleteActivity = functions.httpsCallable('deleteActivity');\n        const res = yield deleteActivity(payload);\n        console.log(res)\n        yield notifySucces(\"Aktivitet slettet!\")\n\n        setTimeout(() => {\n            window.location.href = '/statistikk'\n        }\n            , 2000)\n\n    } catch (error) {\n        console.log(error)\n        yield put(deleteActivityError())\n    }\n}\n\nexport default function* rooSaga() {\n    yield all([\n        takeEvery(ADD_ACTIVITY, addActivity),\n        takeEvery(GET_USER_ACTIVITIES, getUserActivities),\n        takeEvery(GET_ALL_USERS_ACTIVITIES, getAllUsersActivities),\n        takeEvery(DELETE_ACTIVITY, deleteActivity),\n    ]);\n}","/Users/ivangaray/Documents/Proyectos/bino-aktiv/src/redux/dialog/reducer.js",["233","234"],"import {\n  DIALOG_ON,\n  DIALOG_OFF,\n  POP_UP_MESSAGE_ON,\n  POP_UP_MESSAGE_OFF\n} from '../../constants/actionType';\n\nconst INIT_STATE = {\n  show: false,\n  text: '',\n  type: '',\n};\n\nexport default (state = INIT_STATE, action) => {\n  switch (action.type) {\n    case DIALOG_ON:\n      return {\n        show: true, text: action.payload.text, type: action.payload.type,\n      };\n    case DIALOG_OFF:\n      return INIT_STATE;\n\n    case POP_UP_MESSAGE_ON:\n      return {\n        show: true,\n        text: action.payload.text,\n        type: action.payload.type,\n        data: action.payload.data,\n        messagetype: action.payload.messagetype,\n      };\n\n    default:\n      return state;\n  }\n};\n","/Users/ivangaray/Documents/Proyectos/bino-aktiv/src/routes/statistikk/index.js",[],"/Users/ivangaray/Documents/Proyectos/bino-aktiv/src/routes/home/index.js",["235","236"],"import React from 'react';\nimport styled from 'styled-components';\nimport { Container, Row, Col } from 'styled-bootstrap-grid';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { withRouter, Redirect } from 'react-router-dom';\nimport { compose } from 'redux';\nimport 'react-toastify/dist/ReactToastify.css';\n\nimport Layout from '../../layout';\nimport Login from './components/Login';\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\"\nimport Loader from 'react-loader-spinner'\n\nconst Home = ({ history, state }) => {\n    const loading = useSelector(state => state.auth.loading);\n    // const authed = useSelector(state => state.auth.authId);\n    const uid = localStorage.getItem('user_id')\n    return (\n        <Layout>\n            {loading ? <Loader className=\"loader\"\n                type=\"Rings\"\n                color=\"#00BFFF\"\n                height={100}\n                width={100}\n\n            /> : ''}\n            {/* authed !== null ? <Redirect to={'/aktivitet'}></Redirect> : '' */}\n            <Styled>\n                <Container>\n                    <Row>\n                        <Col>\n                            <h2>Kom i form med BINO AKTIV!</h2>\n                            <p>BINO AKTIV er en konkurranse med den målsetting å motivere BINO ansatte til å bli mer aktive, gjennom å stimulere konkurranseinstinktet, øke teamfølelsen, samt inspirere hverandre i hverdagen.</p>\n                            <p>4 lag konkurrerer om den gjeve tittelen, det laget som har vært mest aktiv etter endt måned vinner. Hver måned starter en ny konkurranse og nye muligheter for hvert lag. Let’s get started!</p>\n                            <div className=\"aktiv-list\">\n                                <p><span>A</span>ktivitet</p>\n                                <p><span>K</span>onkurranse</p>\n                                <p><span>T</span>eam</p>\n                                <p><span>I</span>nspirasjon</p>\n                                <p><span>V</span>i kan!</p>\n                            </div>\n                        </Col>\n                    </Row>\n                    <Row>\n                        {!uid ? <Col xs=\"12\" sm=\"12\" md=\"6\" xl=\"5\">\n                            <h1>Logg inn</h1>\n                            <Login />\n                        </Col> : ''}\n                    </Row>\n                </Container>\n\n            </Styled>\n        </Layout>\n    )\n}\n\nexport default compose(withRouter)(Home);\n\nconst Styled = styled.div`\n    .aktiv-list {\n        padding-top: 10px;\n        padding-bottom: 10px;\n        p {\n            margin-top: 0px;\n            margin-bottom: 5px;\n            font-weight: 700;\n            font-size: 18px;\n            color: ${({ theme }) => theme.primaryColor};\n        }\n        span {\n            color: ${({ theme }) => theme.secondaryColor};\n        }\n    }\n    h1 {\n        margin-top: 25px;\n    }\n    h2 {\n        font-size: 28px;\n    }\n    button {\n        margin-top: 35px;\n        margin-bottom: 25px;\n    }\n`","/Users/ivangaray/Documents/Proyectos/bino-aktiv/src/routes/recovery/index.js",["237","238","239","240"],"import React from 'react';\nimport styled from 'styled-components';\nimport { Container, Row, Col } from 'styled-bootstrap-grid';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { withRouter, Redirect } from 'react-router-dom';\nimport { compose } from 'redux';\nimport 'react-toastify/dist/ReactToastify.css';\n\nimport Layout from '../../layout';\nimport Login from './components/Login';\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\"\nimport Loader from 'react-loader-spinner'\nconst Recovery = ({ history, state }) => {\n    const loading = useSelector(state => state.auth.loading);\n    const authed = useSelector(state => state.auth.authId);\n    const uid = localStorage.getItem('user_id')\n    return (\n        <Layout>\n            {authed !== null ? <Redirect to={'/aktivitet'}></Redirect> : ''}\n            <Styled>\n                <Container>\n                    <Row>\n                        <Col xs=\"12\" sm=\"12\" md=\"6\" xl=\"5\">\n                            <h1>Passordgjenoppretting</h1>\n                            <Login />\n                        </Col>\n\n                    </Row>\n                </Container>\n\n            </Styled>\n        </Layout>\n    )\n}\n\nexport default compose(withRouter)(Recovery);\n\nconst Styled = styled.div`\n    .aktiv-list {\n        padding-top: 10px;\n        padding-bottom: 10px;\n        p {\n            margin-top: 0px;\n            margin-bottom: 5px;\n            font-weight: 700;\n            font-size: 18px;\n            color: ${({ theme }) => theme.primaryColor};\n        }\n        span {\n            color: ${({ theme }) => theme.secondaryColor};\n        }\n    }\n    h1 {\n        margin-top: 25px;\n    }\n    h2 {\n        font-size: 28px;\n    }\n    button {\n        margin-top: 35px;\n        margin-bottom: 25px;\n    }\n`","/Users/ivangaray/Documents/Proyectos/bino-aktiv/src/routes/aktivitet/index.js",["241","242","243"],"import React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { connect } from 'react-redux';\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\"\nimport Loader from 'react-loader-spinner'\n\nimport { Container, Row, Col } from 'styled-bootstrap-grid';\nimport styled from 'styled-components';\nimport { Formik, Field, Form } from 'formik';\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { registerLocale } from  \"react-datepicker\";\nimport nb from 'date-fns/locale/nb';\n\nimport { addActivity, getUserData } from '../../redux/actions';\nimport Layout from '../../layout';\nimport Button from '../../components/Button';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nregisterLocale('nb', nb);\n\nconst Aktivitet = () => {\n    useEffect(() => {\n        dispatch(getUserData())\n    }, [])\n    const dispatch = useDispatch();\n    const [startDate, setStartDate] = useState(new Date());\n    const user = useSelector(state => state.auth.user);\n    const loading = useSelector(state => state.activities.loading);\n    let { team } = user;\n    team = parseInt(team)\n\n    return (\n\n        <Layout>\n\n            {loading ? <Loader className=\"loader\"\n                type=\"Rings\"\n                color=\"#00BFFF\"\n                height={100}\n                width={100}\n\n            /> : ''}\n\n            <Styled>\n                <Container>\n                    <Row>\n                        <Col>\n                            <h1>Registrer aktivitet</h1>\n\n                            <Formik\n                                initialValues={{\n                                    type: 'Løpetur',\n                                    date: startDate,\n                                    duration: 3,\n                                }}\n                                onSubmit={(form) => {\n                                    console.log(team, 'esto es team')\n                                    const durationNumber = parseInt(form.duration);\n                                    form.team = team;\n                                    form.date = startDate.toString();\n                                    form.team = parseInt(team);\n                                    form.duration = durationNumber;\n                                    dispatch(addActivity(form));\n                                }}\n                            >\n                                <Form>\n                                    <label>Aktivitet</label>\n                                    <Field\n                                        as=\"select\"\n                                        name=\"type\"\n                                    >\n                                        {DataArtivitet.map((data, index) =>\n                                            <option key={index} value={data}>{data}</option>\n                                        )}\n                                    </Field>\n                                    <label>Dato</label>\n                                    <DatePicker\n                                        selected={startDate}\n                                        onChange={date => {\n                                            setStartDate(date);\n                                        }}\n                                        dateFormat=\"d, MMMM\"\n                                        locale=\"nb\"\n                                    />\n                                    <label>Varighet</label>\n                                    <Field\n                                        as=\"select\"\n                                        name=\"duration\"\n                                    >\n                                        {DataVerighet.map((data, index) =>\n                                            <option key={index} value={data.poeng}>{data.label}</option>\n                                        )}\n                                    </Field>\n                                    <div style={{ marginTop: 35 }}>\n                                        <Button type=\"submit\">Registrer</Button>\n                                    </div>\n                                </Form>\n                            </Formik>\n                        </Col>\n                    </Row>\n                </Container>\n            </Styled>\n        </Layout>\n    )\n}\n\nconst mapStateToProps = ({ auth }) => ({\n    user: auth.user\n})\n\nexport default connect()(Aktivitet);\n\nconst Styled = styled.div`\n    .react-datepicker-wrapper {\n        width: 300px;\n    }\n    @media only screen and (max-width: 575px) {\n        .react-datepicker-wrapper {\n            width: 100%;\n        }\n    }\n`;\n\nconst DataArtivitet = [\n    'Løpetur',\n    'Gåtur',\n    'Styrkeøkt',\n    'Dans',\n    'Yoga',\n    'Pilates',\n    'Kettlebels',\n    'Svømming',\n    'Riding',\n    'Husarbeid',\n    'Hagearbeid',\n    'Ski',\n    'Sykkel',\n    'Annet',\n];\n\nconst DataVerighet = [\n    {\n        label: '15 min',\n        poeng: 1\n    },\n    {\n        label: '30 min',\n        poeng: 2\n    },\n    {\n        label: '45 min',\n        poeng: 3\n    },\n    {\n        label: '60 min',\n        poeng: 4\n    },\n    {\n        label: '1t 15 min',\n        poeng: 5\n    },\n    {\n        label: '1t 30 min',\n        poeng: 6\n    },\n    {\n        label: '1t 45 min',\n        poeng: 7\n    },\n    {\n        label: '2t',\n        poeng: 8\n    }\n];","/Users/ivangaray/Documents/Proyectos/bino-aktiv/src/routes/teams/index.js",[],"/Users/ivangaray/Documents/Proyectos/bino-aktiv/src/routes/profile/index.js",["244","245","246","247"],"import React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Container, Row, Col } from 'styled-bootstrap-grid';\nimport styled from 'styled-components';\nimport { compose } from 'redux';\nimport { withRouter, Redirect } from 'react-router-dom';\nimport { useForm } from \"react-hook-form\";\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\"\nimport Loader from 'react-loader-spinner'\nimport { changePassword, updateUser, getUserData } from '../../redux/actions';\nimport Layout from '../../layout';\nimport Button from '../../components/Button';\n\nconst Profile = (loggedUser) => {\n    const loading = useSelector(state => state.auth.user.loading);\n\n    const dispatch = useDispatch();\n    const { register, handleSubmit, errors, reset } = useForm();\n    const onSubmit = data => {\n        dispatch(updateUser(data));\n        dispatch(getUserData())\n    };\n    useEffect(() => {\n        dispatch(getUserData())\n    }, [])\n\n    const user = useSelector(state => state.auth.user);\n    const email = localStorage.getItem('email');\n    console.log('EMAIL->___>', email)\n    const { name, surname, team, gender } = user\n    const teamOptions = [\n        1, 2, 3, 4\n    ]\n    const genderOptions = [\n        'Kvinne', 'Mann'\n    ]\n    return (\n        <Layout>\n            {loading ? <Loader className=\"loader\"\n                type=\"Puff\"\n                color=\"#00BFFF\"\n                height={100}\n                width={100}\n\n            /> : ''}\n            <Styled>\n                <Container>\n                    <Row>\n                        <Col>\n                            <h1>Profil</h1>\n                            <form onSubmit={handleSubmit(onSubmit)} className=\"login-form\">\n\n                                <label>Fornavn</label>\n                                <input\n                                    name=\"name\"\n                                    autoComplete=\"off\"\n                                    ref={register({ required: true })}\n                                    className={errors.name && 'input-error-field'}\n                                    defaultValue={name}\n\n                                />\n                                {errors.name && <span className=\"input-error-text\">Vennligst sjekk dette feltet</span>}\n                                <label>Etternavn</label>\n                                <input\n                                    name=\"surname\"\n                                    defaultValue={surname}\n\n                                    autoComplete=\"off\"\n                                    ref={register({ required: true })}\n                                    className={errors.surname && 'input-error-field'}\n                                />\n                                {errors.surname && <span className=\"input-error-text\">Vennligst sjekk dette feltet</span>}\n                                <div className=\"no-display\">\n                                    <label>Kjønn</label>\n                                    <select name=\"gender\" ref={register({ required: true })}>\n\n                                        {genderOptions.map(option => {\n                                            return <option value={option} selected={gender === option ? 'selected' : ''}>{option}</option>\n\n                                        })}\n                                    </select>\n                                </div>\n                                <div className=\"no-display\">\n                                    <label>Team</label>\n                                    <select name=\"team\" ref={register({ required: true })}>\n                                        {teamOptions.map(option => {\n                                            return <option value={option} selected={parseInt(team) === option ? 'selected' : ''}>{option}</option>\n\n                                        })}\n\n                                    </select>\n                                </div>\n                                <Button type=\"submit\">Lagre</Button>\n                            </form>\n                        </Col>\n                    </Row>\n                </Container>\n                <Container>\n                    <Row>\n                        <Col>\n                            <Button action={() => dispatch(changePassword({ email }))}>Tilbakestill passord</Button>\n                            <span className=\"reset-message\">Hvis du tilbakestiller passordet, kreves pålogging på nytt</span>\n                        </Col>\n                    </Row>\n                </Container>\n            </Styled>\n        </Layout>\n    )\n}\n\nexport default compose(withRouter)(Profile);\n\n\nconst Styled = styled.div`\n    h1 {\n        padding-bottom: 20px;\n    }\n    span {\n        display: block;\n        color: ${({ theme }) => theme.textColor};\n        font-size: 18px;\n        font-weight: 700;\n        padding-bottom: 30px;\n    }\n    .span-pass {\n        color: #CDCDCD;\n    }\n    button {\n        margin-top: 35px;\n    }\n    .reset-message {\n        font-weight: 400;\n        padding-top: 15px;\n    }\n`","/Users/ivangaray/Documents/Proyectos/bino-aktiv/src/redux/users/saga.js",[],"/Users/ivangaray/Documents/Proyectos/bino-aktiv/src/redux/users/reducers.js",["248"],"import {\n    GET_ALL_USERS,\n    GET_ALL_USERS_SUCCESS,\n    GET_ALL_USERS_ERROR,\n} from '../../constants/actionType';\n\nconst INIT_STATE = {\n    loading: false\n};\n\nexport default (state = INIT_STATE, action) => {\n    switch (action.type) {\n        case GET_ALL_USERS:\n\n            return { ...state, loading: true, error: false };\n        case GET_ALL_USERS_SUCCESS:\n            return { ...state, loading: false, error: false, users: action.payload.data };\n        case GET_ALL_USERS_ERROR:\n            return { ...state, loading: false, error: false };\n\n        default:\n            return state;\n    }\n}","/Users/ivangaray/Documents/Proyectos/bino-aktiv/src/redux/activities/reducers.js",["249"],"import {\n    ADD_ACTIVITY,\n    ADD_ACTIVITY_SUCCES,\n    ADD_ACTIVITY_ERROR,\n    GET_ALL_USERS,\n    GET_ALL_USERS_SUCCESS,\n    GET_ALL_USERS_ACTIVITIES,\n    GET_ALL_USERS_ACTIVITIES_ERROR,\n    GET_ALL_USERS_ACTIVITIES_SUCCES,\n    DELETE_ACTIVITY_SUCCES,\n    DELETE_ACTIVITY_ERROR,\n    DELETE_ACTIVITY\n} from '../../constants/actionType';\n\nconst INIT_STATE = {\n    loading: false\n};\n\nexport default (state = INIT_STATE, action) => {\n    console.log(action)\n    console.log(state)\n    switch (action.type) {\n        case ADD_ACTIVITY:\n            return { ...state, loading: true, error: false };\n        case ADD_ACTIVITY_SUCCES:\n            return { ...state, loading: false, error: false };\n        case ADD_ACTIVITY_ERROR:\n            return { ...state, loading: false, error: false };\n        case GET_ALL_USERS_ACTIVITIES:\n            return { ...state, loading: true, error: false };\n        case GET_ALL_USERS_SUCCESS:\n            return { ...state, loading: true, error: false, };\n        case GET_ALL_USERS:\n            return { ...state, loading: true, error: false, };\n        case GET_ALL_USERS_ACTIVITIES_SUCCES:\n            return { ...state, loading: false, error: false, all: action.payload.data.users };\n        case GET_ALL_USERS_ACTIVITIES_ERROR:\n            return { ...state, loading: false, error: false };\n        case DELETE_ACTIVITY:\n            return { ...state, loading: true, error: false };\n        case DELETE_ACTIVITY_SUCCES:\n            return {\n                ...state\n                , loading: false, error: false\n            };\n        case DELETE_ACTIVITY_ERROR:\n            return { ...state, loading: false, error: false };\n\n        default:\n            return state;\n    }\n}","/Users/ivangaray/Documents/Proyectos/bino-aktiv/src/routes/addUser/index.js",["250","251"],"import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Container, Row, Col } from 'styled-bootstrap-grid';\nimport styled from 'styled-components';\nimport { useForm } from \"react-hook-form\";\nimport { withRouter, Redirect } from 'react-router-dom';\nimport { compose } from 'redux';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nimport { registerUser } from '../../redux/actions';\nimport Layout from '../../layout';\nimport Button from '../../components/Button';\n\nconst AddUser = () => {\n    const dispatch = useDispatch();\n    const { register, handleSubmit, errors, reset } = useForm();\n    const notify = () => toast.success(\"Ok!\", {\n        autoClose: 1000,\n        position: \"top-center\",\n    });\n    const onSubmit = data => {\n        dispatch(registerUser(data));\n        notify();\n        reset();\n    };\n\n    return (\n        <Layout>\n            <Styled>\n                <Container>\n                    <Row>\n                        <Col>\n                            <h1>Add User</h1>\n                            <form onSubmit={handleSubmit(onSubmit)} className=\"login-form\">\n                                <label>E-post</label>\n                                <input\n                                    name=\"email\"\n                                    type=\"email\"\n                                    autoComplete=\"off\"\n                                    ref={register({ required: true })}\n                                    className={errors.email && 'input-error-field'}\n                                />\n                                {errors.email && <span className=\"input-error-text\">Vennligst sjekk dette feltet</span>}\n                                <label>Passord</label>\n                                <input\n                                    name=\"password\"\n                                    type=\"password\"\n                                    autoComplete=\"new-password\"\n                                    ref={register({ required: true, minLength: 8 })}\n                                    className={errors.password && 'input-error-field'}\n                                />\n                                {errors.password && <span className=\"input-error-text\">Vennligst sjekk dette feltet</span>}\n                                <span style={{ paddingBottom: 25 }}>Passordet må inneholde minst 8 tegn</span>\n                                <label>Fornavn</label>\n                                <input\n                                    name=\"name\"\n                                    autoComplete=\"off\"\n                                    ref={register({ required: true })}\n                                    className={errors.name && 'input-error-field'}\n                                />\n                                {errors.name && <span className=\"input-error-text\">Vennligst sjekk dette feltet</span>}\n                                <label>Etternavn</label>\n                                <input\n                                    name=\"surname\"\n                                    autoComplete=\"off\"\n                                    ref={register({ required: true })}\n                                    className={errors.surname && 'input-error-field'}\n                                />\n                                {errors.surname && <span className=\"input-error-text\">Vennligst sjekk dette feltet</span>}\n                                <label>Kjønn</label>\n                                <select name=\"gender\" ref={register({ required: true })}>\n                                    <option value=\"Kvinne\">Kvinne</option>\n                                    <option value=\"Mann\">Mann</option>\n                                </select>\n                                <label>Team</label>\n                                <select name=\"team\" ref={register({ required: true })}>\n                                    <option value=\"1\">1</option>\n                                    <option value=\"2\">2</option>\n                                    <option value=\"3\">3</option>\n                                    <option value=\"4\">4</option>\n                                </select>\n                                <Button type=\"submit\">Add User</Button>\n                            </form>\n                        </Col>\n                    </Row>\n                </Container>\n            </Styled>\n        </Layout>\n    )\n}\n\nexport default compose(withRouter)(AddUser);\n\nconst Styled = styled.div`\n    input, select {\n        color: #666666;\n        background: #EFEFEF;\n        border: none;\n        font-weight: 700;\n        margin-top: 5x;\n        margin-bottom: 5px;\n        &:focus {\n            border: none;\n        }\n    }\n    button {\n        margin-top: 50px;\n    }\n`","/Users/ivangaray/Documents/Proyectos/bino-aktiv/src/routes/tips/index.js",[],"/Users/ivangaray/Documents/Proyectos/bino-aktiv/src/routes/generalStatistikk/index.js",[],"/Users/ivangaray/Documents/Proyectos/bino-aktiv/src/redux/actions.js",[],"/Users/ivangaray/Documents/Proyectos/bino-aktiv/src/redux/activities/actions.js",[],"/Users/ivangaray/Documents/Proyectos/bino-aktiv/src/constants/actionType.js",[],"/Users/ivangaray/Documents/Proyectos/bino-aktiv/src/redux/users/actions.js",[],"/Users/ivangaray/Documents/Proyectos/bino-aktiv/src/routes/statistikk/components/GraphAllActivities.js",["252"],"import React from 'react';\nimport styled from 'styled-components';\nimport { Row, Col } from 'styled-bootstrap-grid';\n\nimport DataTeams from '../../../data/DataTeams';\nimport MonthNames from '../../../data/MonthNames';\nimport Arrows from '../../../components/Arrows';\nimport Star from \"../../../assets/img/Ikon_stjerne.svg\";\nimport Medal1 from \"../../../assets/img/medal_1.svg\";\nimport Medal2 from \"../../../assets/img/medal_2.svg\";\nimport Medal3 from \"../../../assets/img/medal_3.svg\";\nimport Medal4 from \"../../../assets/img/medal_4.svg\";\n\nconst GraphAllActivities = ({\n    activities, currentMonth, selectedMonth, handlePrevious, handleNext,\n}) => {\n\n    let resultTeam1 = 0;\n    let resultTeam2 = 0;\n    let resultTeam3 = 0;\n    let resultTeam4 = 0;\n\n    const activitiesInCurrentMonth = activities && activities.filter((activity) => {\n        const activityMonth = (new Date(activity.date)).getMonth();\n        return activityMonth === selectedMonth;\n    });\n    activities && activitiesInCurrentMonth && activitiesInCurrentMonth.map((result) => {\n        if (result.team === 4) {\n            resultTeam1 += result.duration;\n        } else if (result.team === 2) {\n            resultTeam2 += result.duration;\n        } else if (result.team === 1) {\n            resultTeam3 += result.duration;\n        } else if (result.team === 3) {\n            resultTeam4 += result.duration;\n        }\n    })\n    const Results = [ resultTeam1, resultTeam2, resultTeam3, resultTeam4];\n    const maxHeight = 200;\n    const maxResult = Results && Math.max(...Results);\n    const ResultsPositions = [\n        {\n            team: 1,\n            result: resultTeam1,\n        },\n        {\n            team: 2,\n            result: resultTeam2,\n        },\n        {\n            team: 3,\n            result: resultTeam3,\n        },\n        {\n            team: 4,\n            result: resultTeam4,\n        }\n    ];\n    ResultsPositions.sort(function(a, b) {\n        return b.result - a.result;\n    });\n\n    const isCurrentSelected = currentMonth === selectedMonth;\n\n    return (\n        <StyledGraph>\n            <Row className=\"month-info\">\n                <Col>\n                    {isCurrentSelected\n                        ? <h3 className=\"c-green\">{MonthNames[selectedMonth]}</h3>\n                        : (\n                            <div style={{ position: \"relative\" }}>\n                                <img src={Star} alt=\"stars\" className=\"star-1\" />\n                                <img src={Star} alt=\"stars\" className=\"star-2\" />\n                                <img src={Star} alt=\"stars\" className=\"star-3\" />\n                                <h3>\n                                    <span className=\"c-green\">\n                                        Vinner {MonthNames[selectedMonth]}: \n                                    </span>\n                                    <span> </span>\n                                    <span className=\"c-red\">\n                                        {DataTeams[ResultsPositions[0].team-1].name}\n                                    </span>\n                                </h3>\n                                <h4 className=\"c-red\" style={{ fontSize: 24 }}>\n                                    GRATULERER!\n                                </h4>\n                            </div>\n                        )\n                    }\n                </Col>\n            </Row>\n            <Row alignItems=\"end\">\n                {activities && Results && Results.map((result, index) => {\n                    const pos = ResultsPositions.map(function(e) { return e.team; }).indexOf(index+1);\n                    return (\n                        <Col key={index} xs=\"6\" sm=\"6\" md=\"3\">\n                            <span className=\"c-green\">{result} poeng</span>\n                            <ColumnBar poeng={result * maxHeight / maxResult} />\n                            {!isCurrentSelected && (\n                                <div className=\"medal-container\">\n                                    <img\n                                        src={pos+1 === 1 ? Medal1 : pos+1 === 2 ? Medal2 : pos+1 === 3 ? Medal3 : Medal4}\n                                        alt=\"medal\"\n                                        className=\"medal-class\"\n                                    />\n                                </div>\n                            )}\n                            <div className={`team ${(index === 0 || index === 1) && 'team-mobile'}`}>\n                                <h3 className=\"c-red\">{DataTeams[index].name}</h3>\n                                <img src={DataTeams[index].image} alt={DataTeams[index].name} />\n                            </div>\n                        </Col>\n                    )\n                })}\n            </Row>\n            <Arrows\n                selectedMonth={selectedMonth}\n                currentMonth={currentMonth}\n                handlePrevious={handlePrevious}\n                handleNext={handleNext}\n            />\n        </StyledGraph>\n    )\n}\n\nexport default GraphAllActivities;\n\nconst StyledGraph = styled.div`\n    text-align: center;\n    margin-top: 25px;\n    margin-bottom: 25px;\n    font-weight: 700;\n    .month-info {\n        text-align: left;\n        margin-bottom: 50px;\n    }\n    .star-1 {\n        position: absolute;\n        top: -70px;\n        left: 32%;\n    }\n    .star-2 {\n        position: absolute;\n        top: 0px;\n        left: 40%;\n        width: 50px;\n    }\n    .star-3 {\n        position: absolute;\n        top: 50px;\n        left: 30%;\n        width: 40px;\n    }\n    .medal-container {\n        padding-bottom: 50px;\n        position: relative;\n    }\n    .medal-class {\n        position: absolute;\n        width: 100px;\n        right: -20px;\n        top: -50px;\n    }\n    .team {\n        margin-top: 25px;\n        margin-bottom: 25px;\n        h3 {\n            margin-bottom: 25px;\n        }\n        text-align: center;\n        img {\n            width: 150px;\n            height: 150px;\n            border-radius: 50%;\n            object-fit: cover;\n            @media only screen and (max-width: 575px) {\n                width: 100px;\n                height: 100px;\n            }\n        }\n        &-info {\n            margin-top: 20px;\n            p {\n                margin-top: 0px;\n                margin-bottom: 0px;\n                font-size: 18px;\n            }\n        }\n    }\n    @media only screen and (max-width: 991px) {\n        .star-1 {\n            left: 50%;\n        }\n        .star-2 {\n            left: 60%;\n        }\n        .star-2 {\n            left: 55%;\n        }\n    }\n    @media only screen and (max-width: 767px) {\n        .team-mobile {\n            margin-bottom: 65px;\n        }\n        .star-1 {\n            left: 60%;\n        }\n        .star-2 {\n            left: 70%;\n        }\n        .star-3 {\n            left: 50%;\n        }\n    }\n    @media only screen and (max-width: 767px) {\n        .star-2 {\n            top: 25px;\n        }\n    }\n`\n\nconst ColumnBar = styled.div`\n    background: ${({ theme }) => theme.secondaryColor };\n    height: ${props => props.poeng}px;\n    width: 70%;\n    margin: 0 auto;\n    margin-top: 15px;   \n`","/Users/ivangaray/Documents/Proyectos/bino-aktiv/src/routes/statistikk/components/GraphOwnTrening.js",["253"],"import React from 'react';\nimport styled from 'styled-components';\n\n\nfunction getWeekNumber(d) {\n    // Copy date so don't modify original\n    d = new Date(Date.UTC(d.getFullYear(), d.getMonth(), d.getDate()));\n    // Set to nearest Thursday: current date + 4 - current day number\n    // Make Sunday's day number 7\n    d.setUTCDate(d.getUTCDate() + 4 - (d.getUTCDay()||7));\n    // Get first day of year\n    var yearStart = new Date(Date.UTC(d.getUTCFullYear(),0,1));\n    // Calculate full weeks to nearest Thursday\n    var weekNo = Math.ceil(( ( (d - yearStart) / 86400000) + 1)/7);\n    // Return array of year and week number\n    // return [d.getUTCFullYear(), weekNo];\n    return weekNo;\n}\n\nconst TreningGraph = ({ activities }) => {\n    \n    const last10Week = [];\n    const currenWeek = getWeekNumber(new Date());\n    for (let i=(currenWeek-10); i<=currenWeek; i++) {\n        if (i>=1) {\n            last10Week.push(i);\n        } else if (i<1) {\n            last10Week.push(currenWeek-i+1);\n        }\n    }\n    const last10Weeks = last10Week.sort((a, b) => a-b);\n\n    let resultsByWeek = [];\n    for (let i=0; i <= 53; i++) {\n        resultsByWeek.push(0);\n    }\n    \n    activities && activities.map((activity) => {\n        const findWeek = getWeekNumber(new Date(activity.date));\n        resultsByWeek[findWeek] += 1\n    })\n\n    const maxResult = Math.max(...resultsByWeek);\n    const treiningCount = [];\n    for (let i=maxResult; i >=1; i--) {\n        treiningCount.push(i);\n    }\n\n    return (\n        <StyledGraph>\n            {treiningCount.map((count) => (\n                last10Weeks.map((week, index) => (\n                    <>\n                        {resultsByWeek[week] >= count ? (\n                            <div className='trening-column'>\n                                <div className=\"graph-item\" />\n                            </div>\n                        ) : (\n                            <div className='trening-column'>\n                                <div className=\"graph-item-empty\" />\n                            </div>\n                        )}\n                    </>\n                ))\n            ))}\n            {last10Weeks.map((week, index) => (\n                <div className='trening-column'>\n                    <span className=\"trening-week c-green\">{week}</span>\n                </div>\n            ))}\n        </StyledGraph>\n    )\n}\n\nexport default TreningGraph;\n\nconst StyledGraph = styled.div`\n    .trening-column {\n        width: 9.091%;\n        display: inline-block;\n        text-align: center;\n    }\n    .trening-week {\n        margin-top: 15px;\n        @media only screen and (max-width: 575px) {\n            font-size: 14px;\n        }\n    }\n    .graph-item {\n        background: ${({ theme }) => theme.secondaryColor };\n        height: 20px;\n        width: 10px;\n        border-radius: 10px;\n        margin: 0 auto;\n        margin-top: 5px;\n    }\n    .graph-item-empty {\n        background: transparent;\n        height: 20px;\n        width: 10px;\n        border-radius: 10px;\n        margin: 0 auto;\n        margin-top: 5px;\n    }\n`\n","/Users/ivangaray/Documents/Proyectos/bino-aktiv/src/routes/statistikk/components/ListOwnActivities.js",[],"/Users/ivangaray/Documents/Proyectos/bino-aktiv/src/components/Dialog/index.jsx",["254"],"import React from 'react';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nexport const notifySucces = (message) => toast.success(message, {\n  autoClose: 2000,\n  position: \"top-center\",\n});\n\nexport const notifyError = (message) => toast.error(message, {\n  autoClose: 3000,\n  position: \"top-center\",\n});\n","/Users/ivangaray/Documents/Proyectos/bino-aktiv/src/firebase/index.js",[],"/Users/ivangaray/Documents/Proyectos/bino-aktiv/src/routes/recovery/components/Login.js",[],"/Users/ivangaray/Documents/Proyectos/bino-aktiv/src/redux/dialog/actions.js",[],"/Users/ivangaray/Documents/Proyectos/bino-aktiv/src/layout/index.js",[],"/Users/ivangaray/Documents/Proyectos/bino-aktiv/src/components/Button/index.js",[],"/Users/ivangaray/Documents/Proyectos/bino-aktiv/src/redux/auth/actions.js",["255","256","257"],"import {\n    LOGIN_USER,\n    LOGIN_USER_SUCCCES,\n    LOGIN_USER_ERROR,\n    LOGOUT_USER,\n    LOGOUT_USER_ERROR,\n    LOGOUT_USER_SUCCCES,\n    REGISTER_USER,\n    REGISTER_USER_INIT,\n    REGISTER_USER_SUCCESS,\n    DELETE_USER,\n    DELETE_USER_SUCCES,\n    DELETE_USER_ERROR,\n    REGISTER_USER_ERROR,\n    UPDATE_USER,\n    UPDATE_USER_ERROR,\n    UPDATE_USER_SUCCES,\n    CHANGE_PASSWORD,\n    CHANGE_PASSWORD_ERROR,\n    CHANGE_PASSWORD_SUCCES,\n    GET_USER_DATA_SUCCES,\n    GET_USER_DATA,\n    GET_USER_DATA_ERROR,\n    UPDATE_USER_ACTIVITIES\n} from '../../constants/actionType';\n\nexport const updateUser = (payload) => ({\n    type: UPDATE_USER,\n    payload\n});\n\nexport const updateUserError = () => ({\n    type: UPDATE_USER_ERROR\n});\n\nexport const updateUserSucces = (userId, email) => ({\n    type: UPDATE_USER_SUCCES,\n    payload: { userId, email }\n});\n\n\nexport const loginUser = (payload) => ({\n    type: LOGIN_USER,\n    payload\n});\n\nexport const loginUserError = (errorMessage) => ({\n    type: LOGIN_USER_ERROR,\n    payload: errorMessage\n});\n\nexport const loginUserSucces = (userId, email) => ({\n    type: LOGIN_USER_SUCCCES,\n    payload: { userId, email }\n});\n\nexport const registerUser = (payload) => ({\n    type: REGISTER_USER_INIT,\n    payload: payload\n});\n\nexport const registerUserSucces = (email, password) => ({\n    type: REGISTER_USER_SUCCESS,\n    payload: { email, password }\n})\n\nexport const registerUserError = (error) => ({\n    type: REGISTER_USER_ERROR,\n    payload: { error }\n})\n\nexport const deleteUser = () => ({\n    type: DELETE_USER\n})\n\nexport const deleteUserSucces = () => ({\n    type: DELETE_USER\n})\n\nexport const logOutUser = () => ({\n    type: LOGOUT_USER\n});\n\nexport const logOutUserError = () => ({\n    type: LOGOUT_USER_ERROR\n});\n\nexport const logOutUserSucces = () => ({\n    type: LOGOUT_USER_SUCCCES\n});\n\nexport const changePassword = (email) => ({\n    type: CHANGE_PASSWORD,\n    payload: email\n})\n\nexport const changePasswordSucces = (message) => ({\n    type: CHANGE_PASSWORD_SUCCES,\n    payload: message\n})\n\nexport const changePasswordError = () => ({\n    type: CHANGE_PASSWORD_ERROR\n})\n\nexport const getUserData = () => ({\n    type: GET_USER_DATA\n})\n\nexport const getUserDataSucces = (payload) => ({\n    type: GET_USER_DATA_SUCCES,\n    payload\n})\n\nexport const getUserDataError = (payload) => ({\n    type: GET_USER_DATA_ERROR,\n    payload\n})\n\nexport const updateUserActivities = (payload) => ({\n    type: UPDATE_USER_ACTIVITIES,\n    payload\n})","/Users/ivangaray/Documents/Proyectos/bino-aktiv/src/routes/home/components/Login.js",["258"],"import React from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { useDispatch } from 'react-redux';\nimport styled from 'styled-components';\nimport { Link } from 'react-router-dom'\n\nimport { loginUser, changePassword } from '../../../redux/actions';\nimport Button from '../../../components/Button';\n\nconst Login = () => {\n    const dispatch = useDispatch();\n    const { register, handleSubmit, errors } = useForm();\n    const onSubmit = data => dispatch(loginUser(data, null, 2));\n\n    return (\n        <Styled>\n            <form onSubmit={handleSubmit(onSubmit)} className=\"login-form\">\n                <input\n                    name=\"email\"\n                    type=\"email\"\n                    autoComplete=\"off\"\n                    placeholder=\"E-post\"\n                    ref={register({ required: true })}\n                    className={errors.email && 'input-error-field'}\n                />\n                {errors.email && <span className=\"input-error-text\">Vennligst sjekk dette feltet</span>}\n                <span>Oppgi en gyldig e-postadresse</span>\n                <input\n                    name=\"password\"\n                    type=\"password\"\n                    autoComplete=\"new-password\"\n                    placeholder=\"Passord\"\n                    ref={register({ required: true, minLength: 8 })}\n                    className={errors.password && 'input-error-field'}\n                />\n                {errors.password && <span className=\"input-error-text\">Vennligst sjekk dette feltet</span>}\n                <span>Passordet må inneholde minst 8 tegn</span>\n                <Button type=\"submit\">Logg inn</Button>\n            </form>\n            <button\n                className=\"forgot-password\"\n            >\n                <Link to={'/recovery'}>Glemt passordet ditt?</Link>\n            </button>\n        </Styled>\n    );\n}\n\nexport default Login;\n\nconst Styled = styled.div`\n    input {\n        color: #666666;\n        background: #EFEFEF;\n        border: none;\n        padding-top: 15px;\n        padding-bottom: 15px;\n        font-weight: 700;\n        margin-top: 30px;\n        margin-bottom: 5px;\n        &:focus {\n            border: none;\n        }\n    }\n    .forgot-password {\n        border: none;\n        background: transparent;\n        a {\n            font-size: 16px;\n            font-weight: 700;\n            color: ${({ theme }) => theme.primaryColor};\n            display: block;\n            border: none;\n            background: transparent;\n            cursor: pointer;\n            &:hover {\n                color: ${({ theme }) => theme.secondaryColor};\n            }\n        }\n    }\n`\n\n\n\n\n","/Users/ivangaray/Documents/Proyectos/bino-aktiv/src/data/MonthNames.js",[],"/Users/ivangaray/Documents/Proyectos/bino-aktiv/src/data/DataTeams.js",[],"/Users/ivangaray/Documents/Proyectos/bino-aktiv/src/layout/Header.js",[],"/Users/ivangaray/Documents/Proyectos/bino-aktiv/src/layout/Footer.js",[],"/Users/ivangaray/Documents/Proyectos/bino-aktiv/src/components/Arrows/index.js",[],"/Users/ivangaray/Documents/Proyectos/bino-aktiv/src/components/Menu/index.js",[],"/Users/ivangaray/Documents/Proyectos/bino-aktiv/src/components/Menu/components/Burger.js",[],"/Users/ivangaray/Documents/Proyectos/bino-aktiv/src/components/Menu/components/MenuContent.js",[],["259","260"],{"ruleId":"261","severity":1,"message":"262","line":8,"column":26,"nodeType":"263","messageId":"264","endLine":8,"endColumn":31},{"ruleId":"265","replacedBy":"266"},{"ruleId":"267","replacedBy":"268"},{"ruleId":"261","severity":1,"message":"269","line":2,"column":10,"nodeType":"263","messageId":"264","endLine":2,"endColumn":21},{"ruleId":"261","severity":1,"message":"270","line":2,"column":23,"nodeType":"263","messageId":"264","endLine":2,"endColumn":34},{"ruleId":"271","severity":1,"message":"272","line":14,"column":1,"nodeType":"273","endLine":14,"endColumn":19},{"ruleId":"261","severity":1,"message":"274","line":9,"column":5,"nodeType":"263","messageId":"264","endLine":9,"endColumn":26},{"ruleId":"261","severity":1,"message":"275","line":10,"column":5,"nodeType":"263","messageId":"264","endLine":10,"endColumn":23},{"ruleId":"271","severity":1,"message":"276","line":29,"column":1,"nodeType":"273","endLine":112,"endColumn":2},{"ruleId":"277","severity":1,"message":"278","line":33,"column":89,"nodeType":"279","messageId":"280","endLine":33,"endColumn":94},{"ruleId":"281","severity":1,"message":"282","line":65,"column":58,"nodeType":"283","messageId":"284","endLine":65,"endColumn":67},{"ruleId":"285","severity":1,"message":"286","line":66,"column":29,"nodeType":"287","messageId":"280","endLine":66,"endColumn":31},{"ruleId":"261","severity":1,"message":"288","line":1,"column":10,"nodeType":"263","messageId":"264","endLine":1,"endColumn":14},{"ruleId":"261","severity":1,"message":"289","line":1,"column":37,"nodeType":"263","messageId":"264","endLine":1,"endColumn":43},{"ruleId":"261","severity":1,"message":"290","line":2,"column":10,"nodeType":"263","messageId":"264","endLine":2,"endColumn":14},{"ruleId":"261","severity":1,"message":"274","line":5,"column":5,"nodeType":"263","messageId":"264","endLine":5,"endColumn":26},{"ruleId":"261","severity":1,"message":"291","line":22,"column":5,"nodeType":"263","messageId":"264","endLine":22,"endColumn":21},{"ruleId":"261","severity":1,"message":"292","line":23,"column":5,"nodeType":"263","messageId":"264","endLine":23,"endColumn":17},{"ruleId":"261","severity":1,"message":"293","line":79,"column":15,"nodeType":"263","messageId":"264","endLine":79,"endColumn":18},{"ruleId":"261","severity":1,"message":"288","line":1,"column":10,"nodeType":"263","messageId":"264","endLine":1,"endColumn":14},{"ruleId":"261","severity":1,"message":"289","line":1,"column":37,"nodeType":"263","messageId":"264","endLine":1,"endColumn":43},{"ruleId":"261","severity":1,"message":"294","line":4,"column":5,"nodeType":"263","messageId":"264","endLine":4,"endColumn":36},{"ruleId":"261","severity":1,"message":"295","line":9,"column":10,"nodeType":"263","messageId":"264","endLine":9,"endColumn":14},{"ruleId":"261","severity":1,"message":"292","line":13,"column":5,"nodeType":"263","messageId":"264","endLine":13,"endColumn":17},{"ruleId":"261","severity":1,"message":"296","line":15,"column":5,"nodeType":"263","messageId":"264","endLine":15,"endColumn":25},{"ruleId":"261","severity":1,"message":"297","line":16,"column":5,"nodeType":"263","messageId":"264","endLine":16,"endColumn":25},{"ruleId":"261","severity":1,"message":"298","line":5,"column":3,"nodeType":"263","messageId":"264","endLine":5,"endColumn":21},{"ruleId":"271","severity":1,"message":"276","line":14,"column":1,"nodeType":"273","endLine":35,"endColumn":3},{"ruleId":"261","severity":1,"message":"269","line":4,"column":10,"nodeType":"263","messageId":"264","endLine":4,"endColumn":21},{"ruleId":"261","severity":1,"message":"299","line":5,"column":22,"nodeType":"263","messageId":"264","endLine":5,"endColumn":30},{"ruleId":"261","severity":1,"message":"269","line":4,"column":10,"nodeType":"263","messageId":"264","endLine":4,"endColumn":21},{"ruleId":"261","severity":1,"message":"300","line":12,"column":8,"nodeType":"263","messageId":"264","endLine":12,"endColumn":14},{"ruleId":"261","severity":1,"message":"301","line":14,"column":11,"nodeType":"263","messageId":"264","endLine":14,"endColumn":18},{"ruleId":"261","severity":1,"message":"302","line":16,"column":11,"nodeType":"263","messageId":"264","endLine":16,"endColumn":14},{"ruleId":"261","severity":1,"message":"262","line":18,"column":10,"nodeType":"263","messageId":"264","endLine":18,"endColumn":15},{"ruleId":"303","severity":1,"message":"304","line":26,"column":8,"nodeType":"305","endLine":26,"endColumn":10,"suggestions":"306"},{"ruleId":"261","severity":1,"message":"307","line":109,"column":7,"nodeType":"263","messageId":"264","endLine":109,"endColumn":22},{"ruleId":"261","severity":1,"message":"308","line":1,"column":17,"nodeType":"263","messageId":"264","endLine":1,"endColumn":25},{"ruleId":"261","severity":1,"message":"299","line":6,"column":22,"nodeType":"263","messageId":"264","endLine":6,"endColumn":30},{"ruleId":"261","severity":1,"message":"309","line":18,"column":45,"nodeType":"263","messageId":"264","endLine":18,"endColumn":50},{"ruleId":"303","severity":1,"message":"304","line":25,"column":8,"nodeType":"305","endLine":25,"endColumn":10,"suggestions":"310"},{"ruleId":"271","severity":1,"message":"276","line":11,"column":1,"nodeType":"273","endLine":24,"endColumn":2},{"ruleId":"271","severity":1,"message":"276","line":19,"column":1,"nodeType":"273","endLine":52,"endColumn":2},{"ruleId":"261","severity":1,"message":"308","line":1,"column":17,"nodeType":"263","messageId":"264","endLine":1,"endColumn":25},{"ruleId":"261","severity":1,"message":"299","line":6,"column":22,"nodeType":"263","messageId":"264","endLine":6,"endColumn":30},{"ruleId":"281","severity":1,"message":"311","line":27,"column":85,"nodeType":"312","messageId":"313","endLine":27,"endColumn":87},{"ruleId":"281","severity":1,"message":"311","line":38,"column":45,"nodeType":"312","messageId":"313","endLine":38,"endColumn":47},{"ruleId":"261","severity":1,"message":"314","line":1,"column":8,"nodeType":"263","messageId":"264","endLine":1,"endColumn":13},{"ruleId":"261","severity":1,"message":"315","line":8,"column":5,"nodeType":"263","messageId":"264","endLine":8,"endColumn":18},{"ruleId":"261","severity":1,"message":"316","line":12,"column":5,"nodeType":"263","messageId":"264","endLine":12,"endColumn":23},{"ruleId":"261","severity":1,"message":"317","line":13,"column":5,"nodeType":"263","messageId":"264","endLine":13,"endColumn":22},{"ruleId":"261","severity":1,"message":"318","line":7,"column":21,"nodeType":"263","messageId":"264","endLine":7,"endColumn":35},{"ruleId":"265","replacedBy":"319"},{"ruleId":"267","replacedBy":"320"},"no-unused-vars","'toast' is defined but never used.","Identifier","unusedVar","no-native-reassign",["321"],"no-negated-in-lhs",["322"],"'useDispatch' is defined but never used.","'useSelector' is defined but never used.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","'REGISTER_USER_SUCCESS' is defined but never used.","'REGISTER_USER_INIT' is defined but never used.","Assign arrow function to a variable before exporting as module default","no-dupe-keys","Duplicate key 'error'.","ObjectExpression","unexpected","array-callback-return","Array.prototype.findIndex() expects a value to be returned at the end of function.","FunctionExpression","expectedAtEnd","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","'call' is defined but never used.","'select' is defined but never used.","'push' is defined but never used.","'getUserDataError' is defined but never used.","'dialogInfoOn' is defined but never used.","'res' is assigned a value but never used.","'GET_ALL_USERS_ACTIVITIES_SUCCES' is defined but never used.","'auth' is defined but never used.","'deleteActivitySucces' is defined but never used.","'updateUserActivities' is defined but never used.","'POP_UP_MESSAGE_OFF' is defined but never used.","'Redirect' is defined but never used.","'Loader' is defined but never used.","'loading' is assigned a value but never used.","'uid' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["323"],"'mapStateToProps' is assigned a value but never used.","'useState' is defined but never used.","'reset' is assigned a value but never used.",["324"],"Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'React' is defined but never used.","'REGISTER_USER' is defined but never used.","'DELETE_USER_SUCCES' is defined but never used.","'DELETE_USER_ERROR' is defined but never used.","'changePassword' is defined but never used.",["321"],["322"],"no-global-assign","no-unsafe-negation",{"desc":"325","fix":"326"},{"desc":"325","fix":"327"},"Update the dependencies array to be: [dispatch]",{"range":"328","text":"329"},{"range":"330","text":"329"},[942,944],"[dispatch]",[986,988]]